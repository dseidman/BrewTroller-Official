#ifndef BT_EEPROM_H
#define BT_EEPROM_H

#include <Arduino.h>

void loadSetup();

#ifdef PVOUT
void loadVlvConfigs();

#ifdef PVOUT_TYPE_MODBUS
void loadVlvModbus(byte board);
#endif
#endif

//*****************************************************************************************************************************
// Individual EEPROM Get/Set Variable Functions
//*****************************************************************************************************************************

//**********************************************************************************
//TSensors: HLT (0-7), MASH (8-15), KETTLE (16-23), H2OIN (24-31), H2OOUT (32-39),
//          BEEROUT (40-47), AUX1 (48-55), AUX2 (56-63), AUX3 (64-71)
//**********************************************************************************
void setTSAddr(byte sensor, byte addr[8]);

//**********************************************************************************
//PID Enabled (72); Bit 1 = HLT, Bit 2 = Mash, Bit 3 = Kettle, Bit 4 = Steam
//**********************************************************************************
void setPIDEnabled(byte vessel, boolean setting);


//**********************************************************************************
//PIDp HLT (73), Mash (78), Kettle (83), Steam (88)
//**********************************************************************************
void setPIDp(byte vessel, byte value);
byte getPIDp(byte vessel);

//**********************************************************************************
//PIDi HLT (74), Mash (79), Kettle (84), Steam (89)
//**********************************************************************************
void setPIDi(byte vessel, byte value);
byte getPIDi(byte vessel);

//**********************************************************************************
//PIDd HLT (75), Mash (80), Kettle (85), Steam (90)
//**********************************************************************************
void setPIDd(byte vessel, byte value);
byte getPIDd(byte vessel);

//**********************************************************************************
//PIDCycle HLT (76), Mash (81), Kettle (86), Steam (91)
//**********************************************************************************
void setPIDCycle(byte vessel, byte value);

//**********************************************************************************
//Hysteresis HLT (77), Mash (82), Kettle (87), Steam (92)
//**********************************************************************************
void setHysteresis(byte vessel, byte value);

//**********************************************************************************
//Capacity HLT (93-96), Mash (97-100), Kettle (101-104)
//**********************************************************************************
void setCapacity(byte vessel, unsigned long value);
unsigned long getCapacity(byte vessel);

//**********************************************************************************
//volLoss HLT (105-106), Mash (107-108), Kettle (109-110)
//**********************************************************************************
void setVolLoss(byte vessel, unsigned int value);
unsigned int getVolLoss(byte vessel);

//**********************************************************************************
//Boil Temp (111)
//**********************************************************************************
byte getBoilTemp();
void setBoilTemp(byte boilTemp);

//**********************************************************************************
//Boil Power (112)
//**********************************************************************************
void setBoilPwr(byte value);

//**********************************************************************************
//evapRate (113)
//**********************************************************************************
void setEvapRate(byte value);
byte getEvapRate();

//**********************************************************************************
//steamZero (114-115)
//**********************************************************************************
void setSteamZero(unsigned int value);

//**********************************************************************************
//steamTgt (116)
//**********************************************************************************
void setSteamTgt(byte value);
byte getSteamTgt();

//**********************************************************************************
//steamPSens (117-118)
//**********************************************************************************
void setSteamPSens(unsigned int value);

//**********************************************************************************
//calibVols HLT (119-158), Mash (159-198), Kettle (199-238)
//calibVals HLT (239-258), Mash (259-278), Kettle (279-298)
//**********************************************************************************
void setVolCalib(byte vessel, byte slot, unsigned int value, unsigned long vol);

//*****************************************************************************************************************************
// Power Loss Recovery Functions
//*****************************************************************************************************************************

//**********************************************************************************
//setpoints (299-301)
//**********************************************************************************
void setSetpoint(byte vessel, int value);

//**********************************************************************************
//timers (302-305)
//**********************************************************************************
void setTimerRecovery(byte timer, unsigned int newMins);

//**********************************************************************************
//Timer/Alarm Status (306)
//**********************************************************************************
void setTimerStatus(byte timer, boolean value);

void setAlarmStatus(boolean value);



//**********************************************************************************
//Triggered Boil Addition Alarms (307-308)
//**********************************************************************************
unsigned int getBoilAddsTrig();
void setBoilAddsTrig(unsigned int adds);

//**********************************************************************************
// ***OPEN*** (309-312)
//**********************************************************************************


//**********************************************************************************
//Program Threads (313-316)
//**********************************************************************************

void eepromLoadProgramThread(byte index, struct ProgramThread *thread);

void eepromSaveProgramThread(byte index, struct ProgramThread *thread);

//**********************************************************************************
// ***OPEN*** (317-397)
//**********************************************************************************

//**********************************************************************************
//Delay Start (Mins) (398-399)
//**********************************************************************************
unsigned int getDelayMins();
void setDelayMins(unsigned int mins);
//**********************************************************************************
//Grain Temp (400)
//**********************************************************************************
void setGrainTemp(byte grainTemp);
byte getGrainTemp();

//*****************************************************************************************************************************
// Valve Profile Configuration (401-480; 481-785 Reserved)
//*****************************************************************************************************************************
void setValveCfg(byte profile, unsigned long value);
//**********************************************************************************
//Program Name (P:1-19)
//**********************************************************************************
void setProgName(byte preset, char *name);

void getProgName(byte preset, char *name);
//**********************************************************************************
//OPEN (P:20)
//**********************************************************************************

//**********************************************************************************
//Sparge Temp (P:21)
//**********************************************************************************
void setProgSparge(byte preset, byte sparge);
byte getProgSparge(byte preset);

//**********************************************************************************
//Boil Mins (P:22-23)
//**********************************************************************************
void setProgBoil(byte preset, int boilMins);
unsigned int getProgBoil(byte preset);

//**********************************************************************************
//Mash Ratio (P:24-25)
//**********************************************************************************
void setProgRatio(byte preset, unsigned int ratio);
unsigned int getProgRatio(byte preset);

//**********************************************************************************
//Mash Temps (P:26-31)
//**********************************************************************************
void setProgMashTemp(byte preset, byte mashStep, byte mashTemp);
byte getProgMashTemp(byte preset, byte mashStep);

//**********************************************************************************
//Mash Times (P:32-37)
//**********************************************************************************
void setProgMashMins(byte preset, byte mashStep, byte mashMins);
byte getProgMashMins(byte preset, byte mashStep);

//**********************************************************************************
//Batch Vol (P:38-41)
//**********************************************************************************
unsigned long getProgBatchVol(byte preset);
void setProgBatchVol (byte preset, unsigned long vol);

//**********************************************************************************
//Mash Liquor Heat Source (P:42)
//**********************************************************************************
void setProgMLHeatSrc(byte preset, byte vessel);
byte getProgMLHeatSrc(byte preset);

//**********************************************************************************
//HLT Temp (P:43)
//**********************************************************************************
void setProgHLT(byte preset, byte HLT);
byte getProgHLT(byte preset);

//**********************************************************************************
//Pitch Temp (P:44)
//**********************************************************************************
void setProgPitch(byte preset, byte pitch);
byte getProgPitch(byte preset);

//**********************************************************************************
//Boil Addition Alarms (P:45-46)
//**********************************************************************************
void setProgAdds(byte preset, unsigned int adds);
unsigned int getProgAdds(byte preset);

//**********************************************************************************
//Grain Weight (P:47-50)
//**********************************************************************************
void setProgGrain(byte preset, unsigned long grain);
unsigned long getProgGrain(byte preset);

//**********************************************************************************
//OPEN (P:51-59)
//**********************************************************************************

//**********************************************************************************
//BrewTroller Fingerprint (2046)
//**********************************************************************************

//**********************************************************************************
//EEPROM Version (2047)
//**********************************************************************************

//**********************************************************************************
//LCD Bright/Contrast (2048-2049) ATMEGA1284P Only
//**********************************************************************************

//**********************************************************************************
//Trigger Pins (2050-2054) ATMEGA1284P Only  +Reserved: 2055-2064
//**********************************************************************************
#ifdef DIGITAL_INPUTS
byte getTriggerPin(byte triggerIndex);

void setTriggerPin(byte triggerIndex, byte inputIndex);
#endif


//**********************************************************************************
//Modbus Relay Boards (2065-2074) ATMEGA1284P Only + Reserved: 2075-2084
//**********************************************************************************
byte getVlvModbusAddr(byte board);

unsigned int getVlvModbusReg(byte board);

byte getVlvModbusCoilCount(byte board);

byte getVlvModbusOffset(byte board);

void setVlvModbusAddr(byte board, byte addr);

void setVlvModbusReg(byte board, unsigned int reg);

void setVlvModbusCoilCount(byte board, byte count);

void setVlvModbusOffset(byte board, byte offset);

void setVlvModbusDefaults(byte board);

//*****************************************************************************************************************************
// Check/Update/Format EEPROM
//*****************************************************************************************************************************
boolean checkConfig();

void initEEPROM();

//*****************************************************************************************************************************
// EEPROM Type Read/Write Functions
//*****************************************************************************************************************************
long EEPROMreadLong(int address);

void EEPROMwriteLong(int address, long value);

int EEPROMreadInt(int address);

void EEPROMwriteInt(int address, int value);

void EEPROMwriteBytes(int addr, byte bytes[], byte numBytes);
void EEPROMreadBytes(int addr, byte bytes[], byte numBytes);



#endif